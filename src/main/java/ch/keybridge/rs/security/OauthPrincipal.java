/*
 * Copyright 2020 Key Bridge. All rights reserved. Use is subject to license
 * terms.
 *
 * This software code is protected by Copyrights and remains the property of
 * Key Bridge and its suppliers, if any. Key Bridge reserves all rights in and to
 * Copyrights and no license is granted under Copyrights in this Software
 * License Agreement.
 *
 * Key Bridge generally licenses Copyrights for commercialization pursuant to
 * the terms of either a Standard Software Source Code License Agreement or a
 * Standard Product License Agreement. A copy of either Agreement can be
 * obtained upon request by sending an email to info@keybridgewireless.com.
 *
 * All information contained herein is the property of Key Bridge and its
 * suppliers, if any. The intellectual and technical concepts contained herein
 * are proprietary.
 */
package ch.keybridge.rs.security;

import java.security.Principal;

/**
 * An Oauth 2.0 security context principal entity. This is used to record user
 * information referenced by an Oauth token.
 *
 * @author Key Bridge
 * @since v0.9.0 created 2020-09-05
 */
public class OauthPrincipal implements Principal {

  /**
   * The name of the key (i.e. the key id), which is an identifier generated by
   * the resource server.
   */
  private String kid;
  /**
   * The access token string as issued by the authorization server. This
   * represents the {@code consumer_key} portion of the token response.
   */
  private String accessToken;
  /**
   * The session key generated by the authorization server. This is the
   * {@code shared secret} portion of the token response, while the
   * `access_token` field represents the {@code consumer_key} portion of the
   * token response.
   */
  private String macKey;

  /**
   * {@inheritDoc}
   * <p>
   * Returns the {@code accessToken} value. References the `userId` field to
   * identify the user account to which the token is bound.
   */
  @Override
  public String getName() {
    return accessToken;
  }

  /**
   * Default no-arg constructor.
   */
  public OauthPrincipal() {
  }

  /**
   * Fully qualfied constructor.
   *
   * @param kid         The name of the key
   * @param accessToken The public access token string
   * @param macKey      The shared secret session key
   */
  public OauthPrincipal(String kid, String accessToken, String macKey) {
    this.kid = kid;
    this.accessToken = accessToken;
    this.macKey = macKey;
  }

  //<editor-fold defaultstate="collapsed" desc="Getter and Setter">
  public String getKid() {
    return kid;
  }

  public void setKid(String kid) {
    this.kid = kid;
  }

  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public String getMacKey() {
    return macKey;
  }

  public void setMacKey(String macKey) {
    this.macKey = macKey;
  }//</editor-fold>

}
